<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Neptune</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-21T02:35:29.677Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>The Neptune</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为什么要写独立博客</title>
    <link href="http://yoursite.com/2018/04/20/ABOUT/"/>
    <id>http://yoursite.com/2018/04/20/ABOUT/</id>
    <published>2018-04-19T16:00:00.000Z</published>
    <updated>2018-04-21T02:35:29.677Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="280" height="86" src="//music.163.com/outchain/player?type=2&id=406072138&auto=1&height=66"></iframe><p>我记得那是在两年前，我在万网买下了这个域名，在DigitalOcean租来翻墙用的VPS上用wordpress建立了我的第一个独立博客。当时取名叫做 <strong>The Neptune</strong> 即海王星，我当时幻想那是一颗蓝色的孤独的冰冻星球，独自在漫漫宇宙空间里自旋。我觉得那很像我自己，远离，封闭，似孤岛一般的存在，这个名字也就沿用至今。</p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/89343026.jpg" alt=""></p><p>  /&gt;最初站点的一些残影</p><p>之后这个站点搬迁到了主机公园的虚拟主机上，由于WP使用了谷歌的某些服务，在大陆访问的时候他缓慢，赤钝，恰好之后我注册了微信公众号，在主机费用到期后，我不再续费，这个博客也就暂时停止了服务。值得一提的是我的公众号也延续了这个名称。我仍记得我写的第一篇文章是关于搭建Shadowsocks架构实现翻墙，那是我写的第一篇作业之外的文章，仿佛打开了新世界的大门。</p><p>之后的时间我一直在微信公众号输出文章，直到这周，我重新开始了我的独立博客之路，公众号的文章我会慢慢搬到这里，之后的文章也会保持同步。</p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-20/44240066.jpg" alt=""></p><p>/&gt;我的公众号</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;280&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=
      
    
    </summary>
    
      <category term="GEEK" scheme="http://yoursite.com/categories/GEEK/"/>
    
    
      <category term="About" scheme="http://yoursite.com/tags/About/"/>
    
  </entry>
  
  <entry>
    <title>撰写并发布你的第一篇博客</title>
    <link href="http://yoursite.com/2018/04/19/%E6%92%B0%E5%86%99%E5%B9%B6%E5%8F%91%E5%B8%83%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/04/19/撰写并发布你的第一篇博客/</id>
    <published>2018-04-18T16:00:00.000Z</published>
    <updated>2018-04-21T02:35:06.914Z</updated>
    
    <content type="html"><![CDATA[<p>这是本系列的第二篇文章，建站请参考上一篇</p><p><a href="http://www.lyscc2016.com/2018/04/18/%E4%BD%BF%E7%94%A8HEXO%20%E5%92%8CGitHub%20Pages%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#%E4%BD%BF%E7%94%A8HEXO-%E5%92%8CGitHub-Pages%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2" target="_blank" rel="noopener">使用HEXO 和GitHub Pages建立个人博客</a></p><h2 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h2><ol><li><p>学会使用用Markdown</p></li><li><p>使用图床</p></li><li><p>编辑网页内容</p></li><li><p>网页的发布</p><p>​</p></li></ol><h2 id="Markdown语言"><a href="#Markdown语言" class="headerlink" title="Markdown语言"></a>Markdown语言</h2><h3 id="什么是Markdown？"><a href="#什么是Markdown？" class="headerlink" title="什么是Markdown？"></a>什么是Markdown？</h3><p>Markdown作为一种网络内容的写作用语言, 能让文件更容易阅读、编写，HTML 是一种发布的格式，Markdown是一种编写的格式。HEXO基于Markdown发布内容。简单来说，Markdown是一种简单的编辑器，通过少量的符号标注来实现文章排版，这篇文章就是用其写作。</p><h3 id="安装Markdown编辑器"><a href="#安装Markdown编辑器" class="headerlink" title="安装Markdown编辑器"></a>安装Markdown编辑器</h3><p>Markdown编辑器非常多，这里推荐<strong>Typora</strong>，非常方便新手使用，界面简洁友好。</p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/88626789.jpg" alt="typora"></p><p>下载地址：<a href="https://typora.io/" target="_blank" rel="noopener">Typora</a></p><p>关于Markdown有很多的教程，放一个视频和一个说明文档在这，就不在细讲了。</p><p><a href="https://www.bilibili.com/video/av8819726" target="_blank" rel="noopener"><strong>b站小姐姐讲解Markdown</strong></a></p><p><a href="http://www.lyscc2016.com/2018/04/19/Markdown%E6%96%87%E4%BB%B6%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E/" target="_blank" rel="noopener"><strong>Markdown文件语法说明</strong></a></p><p>##使用图床</p><p>如果你已经在前面学习了Markdown的标记语法，你应该已经发现在页面中插入图片需要一个图片的绝对路径，如何给自己的图片创建一个网络访问路径？这里使用<strong>七牛云</strong>免费空间与<strong>极简图床</strong>来解决。</p><h3 id="七牛云配置"><a href="#七牛云配置" class="headerlink" title="七牛云配置"></a>七牛云配置</h3><p>首先登陆官网注册账号并且创建空间。</p><p><a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云官网</a></p><p>注册七牛云,并且创建公开空间，注意关闭原图保护</p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/39267441.jpg" alt=""><br>/&gt;<strong>创建空间</strong></p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/65357779.jpg" alt=""><br>/&gt;<strong>创建空间</strong></p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/57398715.jpg" alt=""><br>/&gt;<strong>在空间概览获得解析地址（之后图床用）</strong></p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/17113288.jpg" alt=""><br>/&gt;<strong>进入个人面板密钥管理</strong></p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/44574230.jpg" alt=""><br>/&gt;<strong>获得密钥</strong></p><h3 id="极简图床"><a href="#极简图床" class="headerlink" title="极简图床"></a>极简图床</h3><p>注册极简图床账号</p><p><a href="http://jiantuku.com" target="_blank" rel="noopener">极简图床官网</a></p><p>按照下图方式注册并设置空间，上传图片你就获得了图片的唯一网络路径，可以直接在文档中使用了，七牛云国内主机访问速度非常快，基本不用读条加载，适合博客使用。</p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/62243094.jpg" alt=""></p><p><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-19/94377976.jpg" alt=""></p><h2 id="现在可以写你的第一篇部落格了！"><a href="#现在可以写你的第一篇部落格了！" class="headerlink" title="现在可以写你的第一篇部落格了！"></a>现在可以写你的第一篇部落格了！</h2><p>只剩下一件事需要你做了，那就是Front-matter，这几行用三条短线隔离的代码用来描述文章的标题分类等信息。</p><h3 id="举HEXO官网的文件来说明"><a href="#举HEXO官网的文件来说明" class="headerlink" title="举HEXO官网的文件来说明"></a>举HEXO官网的文件来说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td><td></td></tr><tr><td><code>title</code></td><td>标题</td><td></td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td></td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td></tr></tbody></table><p>###分类和标签</p><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure><blockquote><p>分类方法的分歧</p><p>如果您有过使用WordPress的经验，就很容易误解Hexo的分类方式。WordPress支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是Hexo不支持指定多个同级分类。下面的指定方法：<br>categories:<br>- Diary<br>- Life<br>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p></blockquote><h3 id="一些注意"><a href="#一些注意" class="headerlink" title="一些注意"></a>一些注意</h3><p><strong>Front-matter需要用三条短线与正文区分（ — ）</strong></p><p><strong>在每个标签之后均有一个空格</strong></p><p><strong>在标签条目的短线之后也有一个空格</strong></p><p><strong>空格非常重要，请务必按格式来！！！</strong></p><p><strong>空格非常重要，请务必按格式来！！！</strong></p><p><strong>空格非常重要，请务必按格式来！！！</strong></p><p>##发布网页</p><p>只需要将编辑好的<strong>.md</strong>文件粘贴到HEXO目录下的<strong>source/_posts</strong>文件夹内</p><p>运行hexo g 命令生成静态网页</p><p>使用hexo s 可以在<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看预览</p><p>使用hexo d 命令即可一键部署网页到Github</p><p>详细的部署可以参考上一篇文章的<strong>Part 1.3</strong></p><p><a href="http://www.lyscc2016.com/2018/04/18/%E4%BD%BF%E7%94%A8HEXO%20%E5%92%8CGitHub%20Pages%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#%E9%83%A8%E7%BD%B2HEXO%E5%88%B0GitHub" target="_blank" rel="noopener">部署HEXO到GitHub</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是本系列的第二篇文章，建站请参考上一篇&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lyscc2016.com/2018/04/18/%E4%BD%BF%E7%94%A8HEXO%20%E5%92%8CGitHub%20Pages%E5%BB%BA%E7%AB%
      
    
    </summary>
    
      <category term="GEEK" scheme="http://yoursite.com/categories/GEEK/"/>
    
    
      <category term="HEXO" scheme="http://yoursite.com/tags/HEXO/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Markdown文件语法说明</title>
    <link href="http://yoursite.com/2018/04/19/Markdown%E6%96%87%E4%BB%B6%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2018/04/19/Markdown文件语法说明/</id>
    <published>2018-04-18T16:00:00.000Z</published>
    <updated>2018-04-21T02:40:32.315Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇语法说明，原链接位于台湾。</p><p>原始地址:</p><p><a href="http://markdown.tw/#list" target="_blank" rel="noopener">Markdown</a></p><p><img src="http://markdown.tw/images/208x128.png" alt="Markdown"></p><p><strong>NOTE:</strong> This is Traditional Chinese Edition Document of Markdown Syntax. If you are seeking for English Edition Document. Please refer to <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">Markdown: Syntax</a>.</p><h1 id="Markdown-Syntax"><a href="#Markdown-Syntax" class="headerlink" title="Markdown: Syntax"></a>Markdown: Syntax</h1><ul><li>概述<ul><li><a href="http://markdown.tw/#philosophy" target="_blank" rel="noopener">哲學</a></li><li><a href="http://markdown.tw/#html" target="_blank" rel="noopener">行內 HTML</a></li><li><a href="http://markdown.tw/#autoescape" target="_blank" rel="noopener">特殊字元自動轉換</a></li></ul></li><li>區塊元素<ul><li><a href="http://markdown.tw/#p" target="_blank" rel="noopener">段落和換行</a></li><li><a href="http://markdown.tw/#header" target="_blank" rel="noopener">標題</a></li><li><a href="http://markdown.tw/#blockquote" target="_blank" rel="noopener">區塊引言</a></li><li><a href="http://markdown.tw/#list" target="_blank" rel="noopener">清單</a></li><li><a href="http://markdown.tw/#precode" target="_blank" rel="noopener">程式碼區塊</a></li><li><a href="http://markdown.tw/#hr" target="_blank" rel="noopener">分隔線</a></li></ul></li><li>區段元素<ul><li><a href="http://markdown.tw/#link" target="_blank" rel="noopener">連結</a></li><li><a href="http://markdown.tw/#em" target="_blank" rel="noopener">強調</a></li><li><a href="http://markdown.tw/#code" target="_blank" rel="noopener">程式碼</a></li><li><a href="http://markdown.tw/#img" target="_blank" rel="noopener">圖片</a></li></ul></li><li>其他<ul><li><a href="http://markdown.tw/#backslash" target="_blank" rel="noopener">跳脫字元</a></li><li><a href="http://markdown.tw/#autolink" target="_blank" rel="noopener">自動連結</a></li></ul></li><li><a href="http://markdown.tw/#acknowledgement" target="_blank" rel="noopener">感謝</a></li></ul><p><strong>注意：</strong>這份文件是用Markdown寫的，你可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md" target="_blank" rel="noopener">看看它的原始檔</a> 。</p><hr><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="哲學"><a href="#哲學" class="headerlink" title="哲學"></a>哲學</h3><p>Markdown的目標是實現「易讀易寫」。</p><p>不過最需要強調的便是它的可讀性。一份使用Markdown格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。Markdown語法受到一些既有text-to-HTML格式的影響，包括<a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>、<a href="http://textism.com/tools/textile/" target="_blank" rel="noopener">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="noopener">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="noopener">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="noopener">EtText</a>，然而最大靈感來源其實是純文字的電子郵件格式。</p><p>因此Markdown的語法全由標點符號所組成，並經過嚴謹慎選，是為了讓它們看起來就像所要表達的意思。像是在文字兩旁加上星號，看起來就像<em>強調</em>。Markdown的清單看起來，嗯，就是清單。假如你有使用過電子郵件，區塊引言看起來就真的像是引用一段文字。</p><h3 id="行內HTML"><a href="#行內HTML" class="headerlink" title="行內HTML"></a>行內HTML</h3><p>Markdown的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p><p>Markdown不是要來取代HTML，甚至也沒有要和它相似，它的語法種類不多，只和HTML的一部分有關係，重點<em>不是</em>要創造一種更容易寫作HTML文件的語法，我認為HTML已經很容易寫了，Markdow的重點在於，它能讓文件更容易閱讀、編寫。HTML 是一種<em>發佈</em>的格式，Markdown是一種<em>編寫</em>的格式，因此，Markdown的格式語法只涵蓋純文字可以涵蓋的範圍。</p><p>不在Markdown涵蓋範圍之外的標籤，都可以直接在文件裡面用HTML撰寫。不需要額外標註這是HTML或是Markdown；只要直接加標籤就可以了。</p><p>只有區塊元素──比如<code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code>等標籤，必需在前後加上空行，以利與內容區隔。而且這些（元素）的開始與結尾標籤，不可以用tab或是空白來縮排。Markdown的產生器有智慧型判斷，可以避免在區塊標籤前後加上沒有必要的<code>&lt;p&gt;</code>標籤。</p><p>舉例來說，在Markdown文件裡加上一段HTML表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">This is a regular paragraph.</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Foo&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">This is another regular paragraph.</span><br></pre></td></tr></table></figure><p>請注意，Markdown語法在HTML區塊標籤中將不會被進行處理。例如，你無法在HTML區塊內使用Markdown形式的<code>*強調*</code>。</p><p>HTML的區段標籤如<code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code>則不受限制，可以在Markdown的段落、清單或是標題裡任意使用。依照個人習慣，甚至可以不用Markdown格式，而採用HTML標籤來格式化。舉例說明：如果比較喜歡HTML的 <code>&lt;a&gt;</code>或<code>&lt;img&gt;</code>標籤，可以直接使用這些標籤，而不用Markdown提供的連結或是影像標示語法。</p><p>HTML區段標籤和區塊標籤不同，在區段標籤的範圍內，Markdown的語法是有效的。</p><h3 id="特殊字元自動轉換"><a href="#特殊字元自動轉換" class="headerlink" title="特殊字元自動轉換"></a>特殊字元自動轉換</h3><p>在HTML文件中，有兩個字元需要特殊處理：<code>&lt;</code>和<code>&amp;</code>。<code>&lt;</code>符號用於起始標籤<code>&amp;</code>符號則用於標記HTML實體，如果你只是想要使用這些符號，你必須要使用實體的形式，像是<code>&amp;lt;</code>和<code>&amp;amp;</code>。</p><p><code>&amp;</code> 符號其實很容易讓寫作網路文件的人感到困擾，如果你要打「AT&amp;T」 ，你必須要寫成「<code>AT&amp;amp;T</code>」 ，還得轉換網址內的 <code>&amp;</code> 符號，如果你要連結到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>你必須要把網址轉成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>才能放到連結標籤的<code>href</code>屬性裡。不用說也知道這很容易忘記，這也可能是HTML標準檢查所檢查到的錯誤中，數量最多的。</p><p>Markdown允許你直接使用這些符號，但是你要小心跳脫字元的使用，如果你是在HTML實體中使用<code>&amp;</code>符號的話，它不會被轉換，而在其他情形下，它則會被轉換成<code>&amp;amp;</code>。所以你如果要在文件中插入一個著作權的符號，你可以這樣寫：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;copy;</span><br></pre></td></tr></table></figure><p>Markdown將不會對這段文字做修改，但是如果你這樣寫：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;T</span><br></pre></td></tr></table></figure><p>Markdown就會將它轉為：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;amp;T</span><br></pre></td></tr></table></figure><p>類似的狀況也會發生在<code>&lt;</code>符號上，因為Markdown支援<a href="http://markdown.tw/#html" target="_blank" rel="noopener">行內 HTML</a> ，如果你是使用<code>&lt;</code>符號作為HTML標籤使用，那Markdown也不會對它做任何轉換，但是如果你是寫：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &lt; 5</span><br></pre></td></tr></table></figure><p>Markdown將會把它轉換為：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &amp;lt; 5</span><br></pre></td></tr></table></figure><p>不過需要注意的是，code範圍內，不論是行內還是區塊，<code>&lt;</code>和<code>&amp;</code>兩個符號都<em>一定</em>會被轉換成HTML實體，這項特性讓你可以很容易地用Markdown寫HTML code（和HTML相對而言。在HTML語法中，你要把所有的<code>&lt;</code>和<code>&amp;</code>都轉換為 HTML實體，才能在HTML文件裡面寫出HTML code。）</p><hr><h2 id="區塊元素"><a href="#區塊元素" class="headerlink" title="區塊元素"></a>區塊元素</h2><h3 id="段落和換行"><a href="#段落和換行" class="headerlink" title="段落和換行"></a>段落和換行</h3><p>一個段落是由一個以上相連接的行句組成，而一個以上的空行則會切分出不同的段落（空行的定義是顯示上看起來像是空行，便會被視為空行。比方說，若某一行只包含空白和tab，則該行也會被視為空行），一般的段落不需要用空白或斷行縮排。</p><p>「一個以上相連接的行句組成」這句話其實暗示了Markdown允許段落內的強迫斷行，這個特性和其他大部分的text-to-HTML格式不一樣（包括 MovableType的「Convert Line Breaks」選項），其他的格式會把每個斷行都轉成<code>&lt;br /&gt;</code>標籤。</p><p>如果你<em>真的</em>想要插入<code>&lt;br /&gt;</code>標籤的話，在行尾加上兩個以上的空白，然後按enter。</p><p>是的，這確實需要花比較多功夫來插入<code>&lt;br /&gt;</code>，但是「每個換行都轉換為<code>&lt;br /&gt;</code>」的方法在Markdown中並不適合， Markdown中email式的<a href="http://markdown.tw/#blockquote" target="_blank" rel="noopener">區塊引言</a>和多段落的<a href="http://markdown.tw/#list" target="_blank" rel="noopener">清單</a>在使用換行來排版的時候，不但更好用，還更好閱讀。</p><h3 id="標題"><a href="#標題" class="headerlink" title="標題"></a>標題</h3><p>Markdown支援兩種標題的語法，<a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>和<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>形式。</p><p>Setext形式是用底線的形式，利用<code>=</code>（最高階標題）和<code>-</code>（第二階標題），例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">This is an H2</span><br><span class="line">-------------</span><br></pre></td></tr></table></figure><p>任何數量的<code>=</code>和<code>-</code>都可以有效果。</p><p>Atx形式則是在行首插入1到6個 <code>#</code> ，各對應到標題1到6階，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># This is an H1</span><br><span class="line"></span><br><span class="line">## This is an H2</span><br><span class="line"></span><br><span class="line">###### This is an H6</span><br></pre></td></tr></table></figure><p>你可以選擇性地「關閉」atx樣式的標題，這純粹只是美觀用的，若是覺得這樣看起來比較舒適，你就可以在行尾加上<code>#</code>，而行尾的<code>#</code>數量也不用和開頭一樣（行首的井字數量決定標題的階數）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># This is an H1 #</span><br><span class="line"></span><br><span class="line">## This is an H2 ##</span><br><span class="line"></span><br><span class="line">### This is an H3 ######</span><br></pre></td></tr></table></figure><h3 id="區塊引言"><a href="#區塊引言" class="headerlink" title="區塊引言"></a>區塊引言</h3><p>Markdown使用email形式的區塊引言，如果你很熟悉如何在email信件中引言，你就知道怎麼在Markdown文件中建立一個區塊引言，那會看起來像是你強迫斷行，然後在每行的最前面加上<code>&gt;</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">&gt; id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>Markdown也允許你只在整個段落的第一行最前面加上<code>&gt;</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"></span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>區塊引言可以有階層（例如：引言內的引言），只要根據層數加上不同數量的<code>&gt;</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is the first level of quoting.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; This is nested blockquote.</span><br><span class="line">&gt;</span><br><span class="line">&gt; Back to the first level.</span><br></pre></td></tr></table></figure><p>引言的區塊內也可以使用其他的Markdown語法，包括標題、清單、程式碼區塊等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; ## This is a header.</span><br><span class="line">&gt; </span><br><span class="line">&gt; 1.   This is the first list item.</span><br><span class="line">&gt; 2.   This is the second list item.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Here&apos;s some example code:</span><br><span class="line">&gt; </span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure><p>任何標準的文字編輯器都能簡單地建立email樣式的引言，例如BBEdit，你可以選取文字後然後從選單中選擇<em>增加引言階層</em>。</p><h3 id="清單"><a href="#清單" class="headerlink" title="清單"></a>清單</h3><p>Markdown支援有序清單和無序清單。</p><p>無序清單使用星號、加號或是減號作為清單標記：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Red</span><br><span class="line">*   Green</span><br><span class="line">*   Blue</span><br></pre></td></tr></table></figure><p>等同於：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+   Red</span><br><span class="line">+   Green</span><br><span class="line">+   Blue</span><br></pre></td></tr></table></figure><p>也等同於：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-   Red</span><br><span class="line">-   Green</span><br><span class="line">-   Blue</span><br></pre></td></tr></table></figure><p>有序清單則使用數字接著一個英文句點：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.  Bird</span><br><span class="line">2.  McHale</span><br><span class="line">3.  Parish</span><br></pre></td></tr></table></figure><p>很重要的一點是，你在清單標記上使用的數字並不會影響輸出的HTML結果，上面的清單所產生的HTML標記為：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;McHale&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Parish&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><p>如果你的清單標記寫成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.  Bird</span><br><span class="line">1.  McHale</span><br><span class="line">1.  Parish</span><br></pre></td></tr></table></figure><p>或甚至是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3. Bird</span><br><span class="line">1. McHale</span><br><span class="line">8. Parish</span><br></pre></td></tr></table></figure><p>你都會得到完全相同的HTML輸出。重點在於，你可以讓Markdown文件的清單數字和輸出的結果相同，或是你懶一點，你可以完全不用在意數字的正確性。</p><p>如果你使用懶惰的寫法，建議第一個項目最好還是從「1.」開始，因為Markdown未來可能會支援有序清單的start屬性。</p><p>清單項目標記通常是放在最左邊，但是其實也可以縮排，最多三個空白，項目標記後面則一定要接著至少一個空白或tab。</p><p>要讓清單看起來更漂亮，你可以把內容用固定的縮排整理好：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>但是如果你很懶，那也不一定需要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果清單項目間用空行分開， Markdown會把項目的內容在輸出時用<code>&lt;p&gt;</code>標籤包起來，舉例來說：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>會被轉換為：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Magic&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>但是這個：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line"></span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>會被轉換為：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>清單項目可以包含多個段落，每個項目下的段落都必須縮排4個空白或是一個tab：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.  This is a list item with two paragraphs. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line"></span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla in, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line">2.  Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果你每行都有縮排，看起來會看好很多，當然，再次地，如果你很懶惰，Markdown也允許：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line"></span><br><span class="line">    This is the second paragraph in the list item. You&apos;re</span><br><span class="line">only required to indent the first line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line"></span><br><span class="line">*   Another item in the same list.</span><br></pre></td></tr></table></figure><p>如果要在清單項目內放進引言，那<code>&gt;</code>就需要縮排：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*   A list item with a blockquote:</span><br><span class="line"></span><br><span class="line">    &gt; This is a blockquote</span><br><span class="line">    &gt; inside a list item.</span><br></pre></td></tr></table></figure><p>如果要放程式碼區塊的話，該區塊就需要縮排<em>兩次</em>，也就是8個空白或是兩個tab：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   A list item with a code block:</span><br><span class="line"></span><br><span class="line">        &lt;code goes here&gt;</span><br></pre></td></tr></table></figure><p>當然，項目清單很可能會不小心產生，像是下面這樣的寫法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986. What a great season.</span><br></pre></td></tr></table></figure><p>換句話說，也就是在行首出現<em>數字－句點－空白</em>，要避免這樣的狀況，你可以在句點前面加上反斜線。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><h3 id="程式碼區塊"><a href="#程式碼區塊" class="headerlink" title="程式碼區塊"></a>程式碼區塊</h3><p>和程式相關的寫作或是標籤語言原始碼通常會有已經排版好的程式碼區塊，通常這些區塊我們並不希望它以一般段落文件的方式去排版，而是照原來的樣子顯示，Markdown會用<code>&lt;pre&gt;</code>和<code>&lt;code&gt;</code>標籤來把程式碼區塊包起來。</p><p>要在Markdown中建立程式碼區塊很簡單，只要簡單地縮排4個空白或是1個tab就可以，例如，下面的輸入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is a normal paragraph:</span><br><span class="line"></span><br><span class="line">    This is a code block.</span><br></pre></td></tr></table></figure><p>Markdown會轉換成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;This is a normal paragraph:&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;This is a code block.</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>這個每行一階的縮排（4個空白或是1個tab），都會被移除，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Here is an example of AppleScript:</span><br><span class="line"></span><br><span class="line">    tell application &quot;Foo&quot;</span><br><span class="line">        beep</span><br><span class="line">    end tell</span><br></pre></td></tr></table></figure><p>會被轉換為：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>一個程式碼區塊會一直持續到沒有縮排的那一行（或是文件結尾）。</p><p>在程式碼區塊裡面，<code>&amp;</code>、<code>&lt;</code>和<code>&gt;</code>會自動轉成HTML實體，這樣的方式讓你非常容易使用Markdown插入範例用的HTML原始碼，只需要複製貼上，再加上縮排就可以了，剩下的Markdown都會幫你處理，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">    &amp;copy; 2004 Foo Corporation</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>會被轉換為：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;</span><br><span class="line">    &amp;amp;copy; 2004 Foo Corporation</span><br><span class="line">&amp;lt;/div&amp;gt;</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>程式碼區塊中，一般的Markdown語法不會被轉換，像是星號便只是星號，這表示你可以很容易地以Markdown語法撰寫Markdown語法相關的文件。</p><h3 id="分隔線"><a href="#分隔線" class="headerlink" title="分隔線"></a>分隔線</h3><p>你可以在一行中用三個或以上的星號、減號、底線來建立一個分隔線，行內不能有其他東西。你也可以在星號中間插入空白。下面每種寫法都可以建立分隔線：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><hr><h2 id="區段元素"><a href="#區段元素" class="headerlink" title="區段元素"></a>區段元素</h2><h3 id="連結"><a href="#連結" class="headerlink" title="連結"></a>連結</h3><p>Markdown支援兩種形式的連結語法：<em>行內</em>和<em>參考</em>兩種形式。</p><p>不管是哪一種，連結的文字都是用 [方括號] 來標記。</p><p>要建立一個行內形式的連結，只要在方塊括號後面馬上接著括號並插入網址連結即可，如果你還想要加上連結的title文字，只要在網址後面，用雙引號把title文字包起來即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>會產生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</span><br><span class="line">an example&lt;/a&gt; inline link.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</span><br><span class="line">title attribute.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>如果你是要連結到同樣主機的資源，你可以使用相對路徑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">See my [About](/about/) page for details.</span><br></pre></td></tr></table></figure><p>參考形式的連結使用另外一個方括號接在連結文字的括號後面，而在第二個方括號裡面要填入用以辨識連結的標籤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br></pre></td></tr></table></figure><p>你也可以選擇性地在兩個方括號中間加上空白：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example] [id] reference-style link.</span><br></pre></td></tr></table></figure><p>接著，在文件的任意處，你可以把這個標籤的連結內容定義出來：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>連結定義的形式為：</p><ul><li>方括號，裡面輸入連結的辨識用標籤</li><li>接著一個冒號</li><li>接著一個以上的空白或tab</li><li>接著連結的網址</li><li>選擇性地接著title內容，可以用單引號、雙引號或是括弧包著</li></ul><p>下面這三種連結的定義都是相同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[foo]: http://example.com/  &quot;Optional Title Here&quot;</span><br><span class="line">[foo]: http://example.com/  &apos;Optional Title Here&apos;</span><br><span class="line">[foo]: http://example.com/  (Optional Title Here)</span><br></pre></td></tr></table></figure><p><strong>請注意：</strong>有一個已知的問題是Markdown.pl 1.0.1會忽略單引號包起來的連結title。</p><p>連結網址也可以用角括號包起來：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>你也可以把title屬性放到下一行，也可以加一些縮排，網址太長的話，這樣會比較好看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/longish/path/to/resource/here</span><br><span class="line">    &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>網址定義只有在產生連結的時候用到，並不會直接出現在文件之中。</p><p>連結辨識標籤可以有字母、數字、空白和標點符號，但是並<em>不</em>區分大小寫，因此下面兩個連結是一樣的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[link text][a]</span><br><span class="line">[link text][A]</span><br></pre></td></tr></table></figure><p><em>預設的連結標籤</em>功能讓你可以省略指定連結標籤，這種情形下，連結標籤和連結文字會視為相同，要用預設連結標籤只要在連結文字後面加上一個空的方括號，如果你要讓”Google”連結到google.com，你可以簡化成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google][]</span><br></pre></td></tr></table></figure><p>然後定義連結內容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure><p>由於連結文字可能包含空白，所以這種簡化的標籤內也可以包含多個文字：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Visit [Daring Fireball][] for more information.</span><br></pre></td></tr></table></figure><p>然後接著定義連結：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Daring Fireball]: http://daringfireball.net/</span><br></pre></td></tr></table></figure><p>連結的定義可以放在文件中的任何一個地方，我比較偏好直接放在連結出現段落的後面，你也可以把它放在文件最後面，就像是註解一樣。</p><p>下面是一個參考式連結的範例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from</span><br><span class="line">[Yahoo] [2] or [MSN] [3].</span><br><span class="line"></span><br><span class="line">  [1]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [3]: http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>如果改成用連結名稱的方式寫：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from</span><br><span class="line">[Yahoo][] or [MSN][].</span><br><span class="line"></span><br><span class="line">  [google]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>上面兩種寫法都會產生下面的HTML。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;</span><br><span class="line">title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from</span><br><span class="line">&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;</span><br><span class="line">or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>下面是用行內形式寫的同樣一段內容的Markdown文件，提供作為比較之用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)</span><br><span class="line">than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or</span><br><span class="line">[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</span><br></pre></td></tr></table></figure><p>參考式的連結其實重點不在於它比較好寫，而是它比較好讀，比較一下上面的範例，使用參考式的文章本身只有81個字元，但是用行內形式的連結卻會增加到176個字元，如果是用純HTML格式來寫，會有234個字元，在HTML格式中，標籤比文字還要多。</p><p>使用Markdown的參考式連結，可以讓文件更像是瀏覽器最後產生的結果，讓你可以把一些標記相關的資訊移到段落文字之外，你就可以增加連結而不讓文章的閱讀感覺被打斷。</p><h3 id="強調"><a href="#強調" class="headerlink" title="強調"></a>強調</h3><p>Markdown使用星號（<code>*</code>）和底線（<code>_</code>）作為標記強調字詞的符號，被<code>*</code>或<code>_</code>包圍的字詞會被轉成用<code>&lt;em&gt;</code>標籤包圍，用兩個<code>*</code>或<code>_</code>包起來的話，則會被轉成<code>&lt;strong&gt;</code>，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br><span class="line"></span><br><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p>會轉成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;em&gt;single asterisks&lt;/em&gt;</span><br><span class="line"></span><br><span class="line">&lt;em&gt;single underscores&lt;/em&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;double asterisks&lt;/strong&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;double underscores&lt;/strong&gt;</span><br></pre></td></tr></table></figure><p>你可以隨便用你喜歡的樣式，唯一的限制是，你用什麼符號開啟標籤，就要用什麼符號結束。</p><p>強調也可以直接插在文字中間：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un*frigging*believable</span><br></pre></td></tr></table></figure><p>但是如果你的 <code>*</code> 和 <code>_</code> 兩邊都有空白的話，它們就只會被當成普通的符號。</p><p>如果要在文字前後直接插入普通的星號或底線，你可以用反斜線：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure><h3 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h3><p>如果要標記一小段行內程式碼，你可以用反引號把它包起來（<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>Use the <code>printf()</code> function.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">會產生：</span><br></pre></td></tr></table></figure></p><p>Use the <code>printf()</code> function.</p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果要在程式碼區段內插入反引號，你可以用多個反引號來開啟和結束程式碼區段：</span><br></pre></td></tr></table></figure><br><br><code>There is a literal backtick (`) here.</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">這段語法會產生：</span><br></pre></td></tr></table></figure><br><br><p><code>There is a literal backtick (<code>) here.&lt;/code&gt;&lt;/p&gt;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">程式碼區段的起始和結束端都可以放入一個空白，起始端後面一個，結束端前面一個，這樣你就可以在區段的一開始就插入反引號：</span><br></pre></td></tr></table></figure>A single backtick in a code span: `</code> <code>`</code><br><br>A backtick-delimited string in a code span: <code>`foo`</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">會產生：</span><br></pre></td></tr></table></figure><br><br><p>A single backtick in a code span: <code>`</code></p><p></p><p>A backtick-delimited string in a code span: <code><code>foo</code></code></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在程式碼區段內，`&amp;`和角括號都會被轉成HTML實體，這樣會比較容易插入HTML原始碼，Markdown會把下面這段：</span><br></pre></td></tr></table></figure></code></p><p>Please don’t use any <code>&lt;blink&gt;</code> tags.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">轉為：</span><br></pre></td></tr></table></figure></p><p></p><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">你也可以這樣寫：</span><br></pre></td></tr></table></figure><p></p><p><code>&amp;#8212;</code> is the decimal-encoded equivalent of <code>&amp;mdash;</code>.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以產生：</span><br></pre></td></tr></table></figure></p><p></p><p><code>&amp;#8212;</code> is the decimal-encoded<br>equivalent of <code>&amp;mdash;</code>.</p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 圖片</span><br><span class="line"></span><br><span class="line">很明顯地，要在純文字應用中設計一個「自然」的語法來插入圖片是有一定難度的。</span><br><span class="line"></span><br><span class="line">Markdown使用一種和連結很相似的語法來標記圖片，同樣也允許兩種樣式：*行內*和*參考*。</span><br><span class="line"></span><br><span class="line">行內圖片的語法看起來像是：</span><br></pre></td></tr></table></figure><p></p><p><img src="/path/to/img.jpg" alt="Alt text"></p><p><img src="/path/to/img.jpg" alt="Alt text" title="Optional title"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">詳細敘述如下：</span><br><span class="line"></span><br><span class="line">- 一個驚嘆號`!`</span><br><span class="line">- 接著一個方括號，裡面放上圖片的替代文字</span><br><span class="line">- 接著一個普通括號，裡面放上圖片的網址，最後還可以用引號包住並加上 選擇性的&apos;title&apos;文字。</span><br><span class="line"></span><br><span class="line">參考式的圖片語法則長得像這樣：</span><br></pre></td></tr></table></figure></p><p><img src="url/to/image" alt="Alt text" title="Optional title attribute"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">「id」是圖片參考的名稱，圖片參考的定義方式則和連結參考一樣：</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">到目前為止， Markdown還沒有辦法指定圖片的寬高，如果你需要的話，你可以使用普通的`&lt;img&gt;`標籤。</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">## 其他</span><br><span class="line"></span><br><span class="line">### 自動連結</span><br><span class="line"></span><br><span class="line">Markdown支援比較簡短的自動連結形式來處理網址和電子郵件信箱，只要是用角括號包起來，Markdown就會自動把它轉成連結，連結的文字就和連結位置一樣，例如：</span><br></pre></td></tr></table></figure><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown會轉為：</span><br></pre></td></tr></table></figure></p><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">自動的郵件連結也很類似，只是Markdown會先做一個編碼轉換的過程，把文字字元轉成16進位碼的HTML實體，這樣的格式可以混淆一些不好的信箱地址收集機器人，例如：</span><br></pre></td></tr></table></figure></p><p><a href="mailto:&#97;&#100;&#x64;&#x72;&#101;&#115;&#115;&#x40;&#x65;&#120;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#97;&#100;&#x64;&#x72;&#101;&#115;&#115;&#x40;&#x65;&#120;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#x6d;</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown會轉成：</span><br></pre></td></tr></table></figure></p><p><a href="&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;<br>&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在瀏覽器裡面，這段字串會變成一個可以點擊的「address@example.com」連結。</span><br><span class="line"></span><br><span class="line">（這種作法雖然可以混淆不少的機器人，但並無法全部擋下來，不過這樣也比什麼都不做好些。無論如何，公開你的信箱終究會引來廣告信件的。）</span><br><span class="line"></span><br><span class="line">### 跳脫字元</span><br><span class="line"></span><br><span class="line">Markdown可以利用反斜線來插入一些在語法中有其他意義的符號，例如：如果你想要用星號加在文字旁邊的方式來做出強調效果（但不用`&lt;em&gt;`標籤），你可以在星號的前面加上反斜線：</span><br></pre></td></tr></table></figure></p><p>*literal asterisks*<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown支援在下面這些符號前面加上反斜線來幫助插入普通的符號：</span><br></pre></td></tr></table></figure></p><p>\   反斜線<br>`   反引號</p><ul><li>星號<br>_   底線<br>{}  大括號<br>[]  方括號<br>()  括號<h1 id="井字號"><a href="#井字號" class="headerlink" title="井字號"></a>井字號</h1></li></ul><ul><li>加號</li></ul><ul><li>減號<br>.   英文句點<br>!   驚嘆號<br><code>`</code></li></ul><h2 id="感謝"><a href="#感謝" class="headerlink" title="感謝"></a>感謝</h2><p>感謝<a href="https://twitter.com/#!/leafy7382" target="_blank" rel="noopener">leafy7382</a>協助翻譯，<a href="http://iamhlb.com/" target="_blank" rel="noopener">hlb</a>、<a href="http://twitter.com/randylien" target="_blank" rel="noopener">Randylien</a>幫忙潤稿，<a href="https://twitter.com/#!/ethantw" target="_blank" rel="noopener">ethantw</a>的<a href="http://css.hanzi.co/" target="_blank" rel="noopener">漢字標準格式</a>，<a href="http://kidwm.net/" target="_blank" rel="noopener">WM</a>回報文字錯誤。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是一篇语法说明，原链接位于台湾。&lt;/p&gt;
&lt;p&gt;原始地址:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://markdown.tw/#list&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Markdown&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;htt
      
    
    </summary>
    
      <category term="GEEK" scheme="http://yoursite.com/categories/GEEK/"/>
    
    
      <category term="HEXO" scheme="http://yoursite.com/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>使用HEXO 和GitHub Pages建立个人博客</title>
    <link href="http://yoursite.com/2018/04/18/%E4%BD%BF%E7%94%A8HEXO%20%E5%92%8CGitHub%20Pages%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/04/18/使用HEXO 和GitHub Pages建立个人博客/</id>
    <published>2018-04-17T16:00:00.000Z</published>
    <updated>2018-04-21T02:30:47.617Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章的目的是让每一个不懂程序的人都能通过一个下午的努力，方便的建立自己的个人独立博客。简化建站难度，专注写作。</p><p>本系列分为两部分，发布博客请参见下一篇文章。</p><p><a href="http://www.lyscc2016.com/2018/04/19/%E6%92%B0%E5%86%99%E5%B9%B6%E5%8F%91%E5%B8%83%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/#%E6%92%B0%E5%86%99%E5%B9%B6%E5%8F%91%E5%B8%83%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2" target="_blank" rel="noopener"> 撰写并发布你的第一篇博客</a></p><p>##环境配置及软件</p><ul><li><p>Node.js  </p><p>下载地址</p><p><a href="https://nodejs.org/en" target="_blank" rel="noopener">https://nodejs.org/en</a></p></li><li><p>Git</p><p>下载地址</p><p><a href="https://git-scm.com" target="_blank" rel="noopener">https://git-scm.com</a></p></li><li><p>Markdown编辑器</p><p>推荐使用 <strong>typora</strong></p><p><a href="https://typora.io" target="_blank" rel="noopener">https://typora.io</a></p></li><li><p>图床</p><p>可以使用七牛云</p><p>参考这篇文章，非常便捷</p><p>&lt;<a href="http://blog.dqv5.com/2017/08/07/upload-picture/" target="_blank" rel="noopener">http://blog.dqv5.com/2017/08/07/upload-picture/</a></p><p>​</p></li></ul><h2 id="关于GitHub的一些操作"><a href="#关于GitHub的一些操作" class="headerlink" title="关于GitHub的一些操作"></a>关于GitHub的一些操作</h2><ul><li><p>注册Github账号</p></li><li><p>建立仓库</p><p>注意：仓库名必须与用户名对应且符合命名标准</p><p>example：“ your_user_name.github.io ”<br><img src="http://7xvh0c.com2.z0.glb.qiniucdn.com/18-4-18/60222993.jpg" alt="example"></p><p>> 一个仓库示例</p><p>​</p></li><li><p>添加SSH公钥到 “ Account settings -&gt; SSH Keys -&gt; Add SSH Key ”</p><p>这一步是为了给与电脑以GitHub访问授权</p><p>(以下内容来自<a href="https://www.jianshu.com/u/c30afb47d730" target="_blank" rel="noopener">陈素封</a>简书文章，点击链接  <a href="https://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">阅读原文</a>  )</p><p>​</p><h3 id="检查-SSH-keys的设置"><a href="#检查-SSH-keys的设置" class="headerlink" title="检查 SSH keys的设置"></a>检查 SSH keys的设置</h3><p>​</p><p>首先我们需要检查你电脑上现有的 ssh key：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh 检查本机的ssh密钥</span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用 git。</p><p>​</p><h3 id="生成新的-SSH-Key"><a href="#生成新的-SSH-Key" class="headerlink" title="生成新的 SSH Key"></a>生成新的 SSH Key</h3><p>​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"邮件地址@youremail.com"</span></span><br><span class="line">Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;</span><br></pre></td></tr></table></figure><ul><li>注意 1: 此处的邮箱地址，你可以输入自己的邮箱地址；</li><li>注意2: 此处的「-C」的是大写的「C」</li></ul><p>然后系统会要你输入密码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (<span class="keyword">empty</span> <span class="keyword">for</span> no passphrase):&lt;输入加密串&gt;</span><br><span class="line">Enter same passphrase again:&lt;再次输入加密串&gt;</span><br></pre></td></tr></table></figure><p>在回车中会提示你输入一个密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。</p><p>注意：输入密码的时候没有 * 字样的，你直接输入就可以了。</p><p>最后看到这样的界面，就成功设置ssh key了：</p><p><img src="https://upload-images.jianshu.io/upload_images/32598-cf2af2bff37b1031.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/544" alt="img"></p><p>> 13 终端设置成功</p><p>​</p><h3 id="添加-SSH-Key-到-GitHub"><a href="#添加-SSH-Key-到-GitHub" class="headerlink" title="添加 SSH Key 到 GitHub"></a>添加 SSH Key 到 GitHub</h3><p>​</p><p>在本机设置 SSH Key 之后，需要添加到 GitHub上，以完成 SSH 链接的设置。</p><ul><li>1、打开本地 id_rsa.pub 文件（ 参考地址 C:\Documents and Settings\Administrator.ssh\id_rsa.pub）。此文件里面内容为刚才生成的密钥。如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。</li><li>2、登陆 GitHub 系统。点击右上角的 Account Settings—&gt;SSH Public keys —&gt; add another public keys</li><li>3、把你本地生成的密钥复制到里面（ key 文本框中）， 点击 add key 就ok了</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/32598-c8b55d62cc0dbd07.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/4700" alt="img"></p><p>> 14 添加 SSH Key 到 GitHub</p><p>​</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>​</p><p>可以输入下面的命令，看看设置是否成功，<a href="mailto:git@GitHub.com" target="_blank" rel="noopener">git@GitHub.com</a> 的部分不要修改：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@GitHub.com</span><br></pre></td></tr></table></figure><p>如果是下面的反馈：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'GitHub.com (207.97.227.239)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure><p>不要紧张，输入 yes 就好，然后会看到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi cnfeat! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>​</p><h3 id="设置用户信息"><a href="#设置用户信息" class="headerlink" title="设置用户信息"></a>设置用户信息</h3><p>​</p><p>现在你已经可以通过 SSH 链接到 GitHub 了，还有一些个人信息需要完善的。</p><p>Git 会根据用户的名字和邮箱来记录提交。GitHub 也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --<span class="keyword">global</span> user.name <span class="string">"cnfeat"</span><span class="comment">//用户名</span></span><br><span class="line">$ git config --<span class="keyword">global</span> user.email  <span class="string">"cnfeat@gmail.com"</span><span class="comment">//填写自己的邮箱</span></span><br></pre></td></tr></table></figure><p>​</p><h3 id="SSH-Key-配置成功"><a href="#SSH-Key-配置成功" class="headerlink" title="SSH Key 配置成功"></a>SSH Key 配置成功</h3><p>​</p><p>本机已成功连接到 GitHub。</p><p>若有问题，请重新设置。常见错误请参考：</p><ul><li><p><a href="https://link.jianshu.com?t=http://help.GitHub.com/articles/generating-ssh-keys" target="_blank" rel="noopener">GitHub Help - Generating SSH Keys</a></p></li><li><p><a href="https://link.jianshu.com?t=http://help.GitHub.com/articles/error-permission-denied-publickey" target="_blank" rel="noopener">GitHub Help - Error Permission denied (publickey)</a></p></li></ul></li></ul><h2 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h2><ul><li><p><strong>以下内容来自<a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="noopener">令狐葱@前端笔记</a></strong> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd d:/hexo</span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo g <span class="comment"># 或者hexo generate</span></span><br><span class="line">$ hexo s <span class="comment"># 或者hexo server，可以在http://localhost:4000/ 查看</span></span><br></pre></td></tr></table></figure><p><strong>PS:  cd命令的意思是进入，第一条代码的意思是进入D盘下的hexo文件夹，此文件夹需要提前新建用于存储内容，地点任意。</strong></p><p>这里有必要提下Hexo常用的几个命令：</p><ol><li>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li><li>hexo server (hexo s) 启动本地web服务，用于博客的预览</li><li>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）</li></ol><p>​</p><h3 id="Hexo的一些基本命令"><a href="#Hexo的一些基本命令" class="headerlink" title="Hexo的一些基本命令"></a>Hexo的一些基本命令</h3><p>​</p><blockquote><p>hexo g #完整命令为hexo generate,用于生成静态文件</p></blockquote><blockquote><p>hexo s #完整命令为hexo server,用于启动服务器，主要用来本地预览</p></blockquote><blockquote><p>hexo d #完整命令为hexo deploy,用于将本地文件发布到github等git仓库上</p></blockquote><blockquote><p>hexo n “my article” #完整命令为hexo new,用于新建一篇名为“my article”的文章</p></blockquote><p>​</p><p> 现在我们打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 已经可以看到一篇内置的blog了。</p><p><a href="http://7xsxyo.com1.z0.glb.clouddn.com/2016/04/15/FgBbsEvswR84bkwXSjIRBne9bX9q648.jpg" target="_blank" rel="noopener"><img src="http://7xsxyo.com1.z0.glb.clouddn.com/2016/04/15/FgBbsEvswR84bkwXSjIRBne9bX9q648.jpg" alt="img"></a></p><p>目前我安装所用的本地环境如下：(可以通过hexo -v查看)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hexo: <span class="number">3.2</span><span class="number">.0</span></span><br><span class="line">hexo-cli: <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">os: Windows_NT <span class="number">6.3</span><span class="number">.9600</span> win32 x64</span><br><span class="line">http_parser: <span class="number">2.5</span><span class="number">.2</span></span><br><span class="line">node: <span class="number">4.4</span><span class="number">.1</span></span><br><span class="line">v8: <span class="number">4.5</span><span class="number">.103</span><span class="number">.35</span></span><br><span class="line">uv: <span class="number">1.8</span><span class="number">.0</span></span><br><span class="line">zlib: <span class="number">1.2</span><span class="number">.8</span></span><br><span class="line">ares: <span class="number">1.10</span><span class="number">.1</span>-DEV</span><br><span class="line">icu: <span class="number">56.1</span></span><br><span class="line">modules: <span class="number">46</span></span><br><span class="line">openssl: <span class="number">1.0</span><span class="number">.2</span>g</span><br></pre></td></tr></table></figure></li></ul><h2 id="部署HEXO到GitHub"><a href="#部署HEXO到GitHub" class="headerlink" title="部署HEXO到GitHub"></a>部署HEXO到GitHub</h2><ul><li><p>这一步恐怕是最关键的一步了，让我们把在本地web环境下预览到的博客部署到github上，然后就可以直接通过<a href="http://jiji262.github.io/访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。" target="_blank" rel="noopener">http://jiji262.github.io/访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。</a><br>首先需要明白所谓部署到github的原理。</p><ol><li>之前步骤中在Github上创建的那个特别的repo（jiji262.github.io）一个最大的特点就是其master中的html静态文件，可以通过链接<a href="http://jiji262.github.io来直接访问。" target="_blank" rel="noopener">http://jiji262.github.io来直接访问。</a></li><li>Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。</li><li>需要将hexo生成的静态网站，提交(git commit)到github上。</li></ol><p>明白了原理，怎么做自然就清晰了。</p><p>​</p><h3 id="使用hexo-deploy部署"><a href="#使用hexo-deploy部署" class="headerlink" title="使用hexo deploy部署"></a>使用hexo deploy部署</h3><p>​</p><p>hexo deploy可以部署到很多平台，具体可以<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">参考这个链接</a>. 如果部署到github，需要在配置文件_config.xml中作如下修改：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:jiji262/jiji262.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>然后在命令行中执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>即可完成部署。</p><p>​</p><h3 id="踩坑提醒"><a href="#踩坑提醒" class="headerlink" title="踩坑提醒"></a><strong>踩坑提醒</strong></h3><p>​</p><p>1）注意需要提前安装一个扩展：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>2）如果出现下面这样的错误，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Permission denied (publickey).</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line"><span class="keyword">and</span> the repository exists.</span><br></pre></td></tr></table></figure><p>则是因为没有设置好public key所致。<br>在本机生成public key(参考<a href="https://help.github.com/articles/generating-an-ssh-key/" target="_blank" rel="noopener">github帮助</a>)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">＃ssh-keygen -t rsa -b <span class="number">4096</span> -C <span class="string">"xxx@xxx.com"</span></span><br></pre></td></tr></table></figure><p>然后在#user_id/.ssh目录下会生成两个文件，id_rsa.pub和id_rsa.<br>然后登陆github，在<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">SSH设置页面</a>添加上刚才的public key文件也就是id_rsa.pub的内容即可。</p><p>​</p><h3 id="使用git命令行部署（optional）"><a href="#使用git命令行部署（optional）" class="headerlink" title="使用git命令行部署（optional）"></a>使用git命令行部署（optional）</h3><p>​</p><p>不幸的是，上述命令虽然简单方便，但是偶尔会有莫名其妙的问题出现，因此，我们也可以追本溯源，使用git命令来完成部署的工作。</p><p>​</p><h4 id="clone-github-repo"><a href="#clone-github-repo" class="headerlink" title="clone github repo"></a>clone github repo</h4><p>​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd d:/hexo/blog</span><br><span class="line"></span><br><span class="line">$ git <span class="keyword">clone</span> https:<span class="comment">//github.com/jiji262/jiji262.github.io.git .deploy/jiji262.github.io</span></span><br></pre></td></tr></table></figure><p>将我们之前创建的repo克隆到本地，新建一个目录叫做.deploy用于存放克隆的代码。</p><p>​</p><h3 id="创建一个deploy脚本文件"><a href="#创建一个deploy脚本文件" class="headerlink" title="创建一个deploy脚本文件"></a>创建一个deploy脚本文件</h3><p>​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">cp -R <span class="keyword">public</span><span class="comment">/* .deploy/jiji262.github.io</span></span><br><span class="line"><span class="comment">cd .deploy/jiji262.github.io</span></span><br><span class="line"><span class="comment">git add .</span></span><br><span class="line"><span class="comment">git commit -m “update”</span></span><br><span class="line"><span class="comment">git push origin master</span></span><br></pre></td></tr></table></figure><p>简单解释一下，hexo generate生成public文件夹下的新内容，然后将其拷贝至jiji262.github.io的git目录下，然后使用git commit命令提交代码到jiji262.github.io这个repo的master branch上。</p><p>需要部署的时候，执行这段脚本就可以了（比如可以将其保存为deploy.sh）。执行过程中可能需要让你输入Github账户的用户名及密码，按照提示操作即可。</p><p>​</p></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><ul><li>基于以上步骤，花费大约三个小时左右的时间，你的博客大概已经能在GitHub上运行了，这是基础的第一步。HEXO文本使用Markdown语法，上手十分容易，能让你只专注于写作，在之后的文章里我们将探讨如何发布你的第一篇文章。所谓认识一把锤子最好的方法就是拿起来用它，其实有些事情并不困难，只是我们缺乏走出第一步的勇气。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇文章的目的是让每一个不懂程序的人都能通过一个下午的努力，方便的建立自己的个人独立博客。简化建站难度，专注写作。&lt;/p&gt;
&lt;p&gt;本系列分为两部分，发布博客请参见下一篇文章。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lyscc2016.com/2018/04/
      
    
    </summary>
    
      <category term="GEEK" scheme="http://yoursite.com/categories/GEEK/"/>
    
    
      <category term="HEXO" scheme="http://yoursite.com/tags/HEXO/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>2017就要过去了，我假装怀念他</title>
    <link href="http://yoursite.com/2017/12/31/2017%E5%B0%B1%E8%A6%81%E8%BF%87%E5%8E%BB%E4%BA%86%EF%BC%8C%E6%88%91%E5%81%87%E8%A3%85%E6%80%80%E5%BF%B5%E4%BB%96/"/>
    <id>http://yoursite.com/2017/12/31/2017就要过去了，我假装怀念他/</id>
    <published>2017-12-30T16:00:00.000Z</published>
    <updated>2018-04-21T03:00:24.030Z</updated>
    
    <content type="html"><![CDATA[<p>文/reasonPi</p><p><strong>”这一年过的还好吗？”</strong></p><p>2017的最后一天，我走在街上。灰蒙蒙的霾笼罩苏州，看了眼指数，三百多。街上的人忍不住咳嗽，极少数带着蓝色的卫生口罩，低头默默前行，他们已经习惯了这样的天气了，反正戴和不戴空气都是这样，也没啥明显的不适，无所谓吧。</p><p>2017的下半年，阅读量翻了一倍，在南方上大学，和爱的人在一起，但我常常陷入矛盾之中。坦率的讲，这是我第一次回忆多年的受教育生涯我真正学到了什么，我们的基础教育问题在哪，为何我自我感觉和同龄人有巨大的观念上的差异？就在这个月，军训的军事理论课上，一个认识的人在听完我说话之后突然问我，“你是不是西化了？”。我一时语塞，答不上来，这是我第一次从同龄人口中听到这个词，<strong>什么是西化？</strong></p><p>层层霾霭下，我们处在“最好的时代”。物质丰富，生活充裕，全面小康近在眼前，我们热爱这种宏大的叙事。儿时国旗下，嘴里嚼着红领巾角，小手行着队礼，听老师讲这些那些。谈论了十几年的爱国，到底是在谈论着什么。入队是一种荣誉，未入队的小朋友被人看不起，甚至没有人和他玩，<strong>为什么会这样？</strong></p><p>常有人说“东方人讲人性本善体现了人本主义思想，西方人说人性本恶体现了法制的光辉”。人真的有所谓“本性“吗？</p><p>一个人的原生家庭和其语言环境，教育与社会共同造就了一个人的行为方式。学校教给了我们什么？</p><p>我记得前几个月，有一个爆炸式传播的热点是关于性的，性教育与性启蒙。大量的信息直指我们性教育的缺失，但在大纲中，这些问题是不少的，问题出在哪里。我想起小学的生理卫生课，我记得那时好像都被语文课占去了，少有的几节也没啥印象，老师乐得清闲，“反正小孩子也听不懂”。到了初中，课本上的那一章好像直接被跳过，老师在某个学期末抽了一节课，放了几张PPT，大家都低着头或哄堂大笑，草草了事。关于这个时期，我还有一点模糊的印象，某次在亲戚家看电视，电视中的人物正在接吻，旁边的家长大喊少儿不宜少儿不宜，我尴尬万分捂着眼睛举头向天。<strong>接吻是一件羞耻的，有犯罪属性的事吗？</strong>高中就没提过这种事，我毫无印象。那么，在我们走向成熟的这一段时期，我们从学校获取的性知识可以说是没有的。这导致一些妖魔鬼怪乘机而入，“戒色吧”“丁璇女士”“中医老教授”层出不群。那么，这些问题有没有在大量转发过后被解决呢？</p><p>那再说说关于爱。我们常常被教育爱一些宏观的事物，国家，领袖，人民。却独不知道如何去爱与尊重每一个独立的个体。从台湾同性恋合法化到国内”官媒“指责同性恋有碍风化，再从屠呦呦获得诺贝尔奖到大学教授言辞凿凿称女生不适合搞学术。巨大的反差背后潜藏着远古的土味。我们究竟在教育孩子什么是爱还是什么是恨？今年咪蒙分外的火，乐天被抵制，大家特别的爱国。“祖国这么流氓我就放心了”。那么这究竟是爱是恨呢？我想起我昨天的推送来。我们懂得一切宏观的爱，却不会表达看见一个人时内心的闪光。我们被教育生活在一个丛林里，人人要保住饭碗，关系社会，不要相信任何一个人。然而从来没有人告诉过我们要相信法制与自由，相信人与人之间的信任与热爱，相信那些纯真的理想主义。有一个人说过“<strong>I have no enemies and no hatred.</strong>”，他的愿景何时能够实现呢？</p><p>2017同样火热的还有中医药。我想起了刚上西浦时，我的英语老师Davis讲的，我引用在下面。“Chinese medicine is a culture,not a science.” 那节课我还记住了一个词叫“<strong>placebo</strong>”，即安慰剂。当我们谈起中医时，总爱举屠呦呦的例子，那青蒿素是中药么？不是的哦。时至今日，还有中医在使用放血疗法，那还是体液疗法时期的故事了。然而你打开知乎又是各种现身说法。有人说”不是中西医之分，而是现代医学和古代医学之分。不论东西，都应该向现代医学发展。“，深以为然。</p><p>这个公众号可检索的第一篇文章叫做《写在高考后》，现在看来，仍不过时。我全文贴在这里，作为2017年最后一天我想说的话。</p><hr><h3 id="写在高考后"><a href="#写在高考后" class="headerlink" title="#写在高考后"></a>#写在高考后</h3><p>时间进入2017年。西方资本主义亡我之心不死的论调早已经过时，世界终将走向交流与融合。但多数人的认知并非如此。狭隘的民粹主义大行其道，阴谋论比任何时候都受到欢迎。“好青年”在空间里，在微博上，刷新自己的存在感。</p><p>在中文互联网，能给我们接触的信息越来越片面化，越来越具有导向性。你将很难了解一件事的全貌。在知乎上，大量回答被折叠，点赞变成愚蠢的狂欢。在微博上，你发出去的东西有时候只有你自己能看见，你却浑然不觉。在微信里，你发送成功的消息在对方的屏幕里没有一点的动静，无声无息的消失。</p><p>自你打开浏览器之始，系统便根据你的喜好为你量身推送消息，短期来看，这让你浏览方便舒适。长此以往便回出现一个循环，你会在你自己建立的习惯里打转，逐渐随波逐流，跟着推送丢掉了大脑。更有意思的是，当最初没有浏览记录的你进入网络的时候，系统会给予你以引导，推送一些所谓主流的信息，让你逐步入圈。</p><p>当一个网站消失，人们大多数时候不会去细想，正好404下面有一条推送，点击进去，哈哈一笑便忘了原来的浏览目的。透明的墙早已形成，更多的人毫无查觉。擦墙洗地，久而久之，习以为常。</p><p>最近对于国乒吵的火热，大多数网民热血沸腾的表达了对“盛世”的不同看法。似乎天平倾斜的方向已经改变，但这其实并不能说明什么问题。在媒体炒作下一个“韩国端午节”之时，这些人又会变一个样子出现。反反复复，体现的并不是民智的觉醒，恐怕更像是一阵一阵风。这几天在质疑这盛世是否如你所愿的人，过两天可能不知道又在攻击哪个所谓“不爱国”的无辜的人。</p><p><strong>世界真实的样子和你以为世界的样子并不是一个样子。正应如此，青年人更应该多方面的看看世界。当从YouTube上转载视频变成一些人的固定营销手段，你何不去亲自看看？</strong>  green将于下个月停止服务，但方法依旧很多，虽然可能没有那么便捷。但这点小问题绝不会成为你前进路上不可跨越的障碍，因为比起其他，这已经很容易解决。</p><blockquote><p>愿所有的人都向上走</p><p>放下手机之时不再茫茫然不知所措</p><p>能冲破那无形的墙</p><p>看看世界的样子</p><p>愿“好青年”越来越少</p><p>翻墙出征之事不再一呼百应</p><p>能放下盲目与冲动</p><p>把理性撒播</p><p>愿你能保持探索的心</p><p>不被滚滚洪流所裹挟被动跟随</p><p>能判断拙略的谣言</p><p>拥有洞穿阴霾的眼睛</p><p>愿这盛世真的如你所愿</p><p>自由 民主 公正 法治</p><p>能包容每个不同意见者</p><p>倾听异乡人的声音</p><p>愿我们每个人都变得更好</p><p>因为在那时候</p><p>你是什么样子</p><p>中国就是什么样子</p></blockquote><p>这是2017年最后一篇推送了，生活类博主的努力算是放弃了，实在做不到。</p><p>中国人的年其实更多的是一种文化范畴上的节日，1月1日则是现实意义上的“翻篇”。在今天敲下这两千多个字，不为别的，就为了记住这曲折的2017年。它代表着我的想法，我的态度，我热爱的事物以及我深爱的人。在那些问号之下，有些已经解答，有些还在解答的路上，有些则还需要我们不懈的努力。它告诫着我们不要轻易的遗忘。</p><p>关于昨天的推送，大家可以回复个2017试试看，也许还能看到。看不到也没办法，毕竟不不太擅长自我阉割这一套。</p><p>开了个小号，叫“ThePluto”，意图是防止这个号炸了，毕竟这也算是我和朋友们交流的一个平台，失去不舍，所以未雨绸缪。想举报我的就别关注了。</p><p>这个号到现在我没开过几次赞赏，但是还真有赞赏的人，这些钱都给兰大庄的孩子们买书吧。</p><p>明年见。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文/reasonPi&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;”这一年过的还好吗？”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2017的最后一天，我走在街上。灰蒙蒙的霾笼罩苏州，看了眼指数，三百多。街上的人忍不住咳嗽，极少数带着蓝色的卫生口罩，低头默默前行，他们已经习惯了这样的天气了，反正戴
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="公众号往期文章归档" scheme="http://yoursite.com/tags/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BE%80%E6%9C%9F%E6%96%87%E7%AB%A0%E5%BD%92%E6%A1%A3/"/>
    
      <category term="A" scheme="http://yoursite.com/tags/A/"/>
    
  </entry>
  
</feed>
